'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dummyPack = require('./dummyPack');

var _dummyPack2 = _interopRequireDefault(_dummyPack);

var _functions = require('./functions');

var coreFunctions = _interopRequireWildcard(_functions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Webpacker = function () {
  _createClass(Webpacker, null, [{
    key: '_reset',
    value: function _reset() {
      var nodeEnv = process.env.NODE_ENV;

      if (!nodeEnv || nodeEnv === 'undefined') {
        nodeEnv = 'development';
      }

      Webpacker._env = _defineProperty({}, nodeEnv, true);

      Webpacker._functions = [];
      Webpacker._configures = [];
      Webpacker.addFunctions(coreFunctions);
    }
  }, {
    key: 'isEnv',
    value: function isEnv(name) {
      return !!Webpacker._env[name];
    }
  }, {
    key: 'isDevelopment',
    value: function isDevelopment() {
      return Webpacker.isEnv('development');
    }
  }, {
    key: 'isProduction',
    value: function isProduction() {
      return Webpacker.isEnv('production');
    }
  }, {
    key: 'setEnv',
    value: function setEnv(name, state) {
      Webpacker._env[name] = state;
    }
  }, {
    key: 'addFunctions',
    value: function addFunctions(functions) {
      var _loop = function _loop(name) {
        var func = functions[name];

        if (!func.execute || typeof func.execute !== 'function') {
          throw 'missing execute function';
        }

        if (!func.configure || typeof func.configure !== 'function') {
          throw 'missing configure function';
        }

        Webpacker._functions.push(name);
        Webpacker._configures.push(func.configure);

        Webpacker.prototype[name] = function () {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          func.execute.apply(func, [this.state].concat(args));
          return this; // make it chainable
        };
      };

      for (var name in functions) {
        _loop(name);
      }

      Webpacker._dummyPack = (0, _dummyPack2.default)(Webpacker._functions);
    }
  }]);

  function Webpacker() {
    _classCallCheck(this, Webpacker);

    this.state = {};
  }

  _createClass(Webpacker, [{
    key: 'forEnv',
    value: function forEnv(name) {
      if (!Webpacker.isEnv(name)) {
        return Webpacker._dummyPack;
      }

      return this;
    }
  }, {
    key: 'forDevelopment',
    value: function forDevelopment() {
      return this.forEnv('development');
    }
  }, {
    key: 'forProduction',
    value: function forProduction() {
      return this.forEnv('production');
    }
  }, {
    key: 'generateOutput',
    value: function generateOutput() {
      var config = {};

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = Webpacker._configures[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _func = _step.value;

          _func(config, this.state);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return config;
    }
  }]);

  return Webpacker;
}();

exports.default = Webpacker;


Webpacker._reset();
module.exports = exports['default'];