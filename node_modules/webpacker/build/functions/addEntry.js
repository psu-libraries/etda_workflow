'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var addEntry = exports.addEntry = {
  execute: function execute(state, name, file) {
    if (!file) {
      file = name;
      name = undefined;
    }

    if (!state.entry) {
      state.entry = [];
    } else if (!!state.entry[0].name !== !!name) {
      throw 'cannot mix named and unnamed entry';
    }

    state.entry.push({ name: name, file: file });
  },
  configure: function configure(config, state) {
    if (!state.entry) {
      throw 'you must configure an entry point';
    }

    if (state.entry[0].name) {
      config.entry = {};

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = state.entry[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var entry = _step.value;

          config.entry[entry.name] = entry.file;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    } else {
      config.entry = state.entry.map(function (e) {
        return e.file;
      });
    }
  }
};