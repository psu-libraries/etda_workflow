initialize_ldap_autocomplete = ->
    input_fields = $('input.ldap-lookup')
    return unless input_fields.length
    autocomplete_it(input_fields)

initialize_addon_autocomplete = ->
    $('#add_member').on('cocoon:after-insert', (e, committee_members) ->
        input_fields=committee_members.find('input.ldap-lookup')
        return unless input_fields.length
        autocomplete_it(input_fields) )

autocomplete_it = (input_fields) ->
    last_selected_ui = null

    input_fields.autocomplete({

        source: '<%= Rails.application.routes.url_helpers.committee_members_autocomplete_path %>',

        minLength: 2,

        # save off the last ui element selected incase the user moves around in the fields before leaving
        select: (event, ui) ->
            last_selected_ui = ui
        change: (event, ui) ->
            complete_email(ui, last_selected_ui,  this)
        create: () ->
            $(this).data('ui-autocomplete')._renderItem = (ul, item) -> return $('<li>').append( "<span>" + item.label + "<br>-- " + item.dept + "</span>"  ).appendTo(ul)

    })

complete_email = (ui, last_selected_ui, field_ref) ->
    # the item could be nil if the user moves around in the field,
    # but if the value is the same as the last selected item do the email
    # with the last selected value
    if (ui.item == null) && (last_selected_ui != null) && (field_ref.value == last_selected_ui.item.label)
        ui = last_selected_ui

    if ui.item
        email_address = ui.item.id
        # use index of current name field to find the next input field which is the email
        email_field = $(':input')[$(field_ref).index(':input') + 1]
        email_field.value = email_address


$(document).on('page:load ready', initialize_ldap_autocomplete)
$(document).on('page:load ready', initialize_addon_autocomplete)