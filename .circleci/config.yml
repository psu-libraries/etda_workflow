version: 2.1

jobs:
  build:
    docker:
      - image: devago/docker-compose
    environment:
      REGISTRY_HOST: harbor.dsrd.libraries.psu.edu
      REGISTRY_URL: harbor.dsrd.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - setup_remote_docker
    - checkout
    # - restore_cache:
    #     keys:
    #       - docker-image
    - run:
        name: "Build Container"
        command: |
          if [ -f etda-workflow.tar ]; then docker load -i etda-workflow.tar; fi
          docker build -t $REGISTRY_URL:$CIRCLE_SHA1 -t etda_workflow_web:latest --target base .
          docker save -o etda-workflow.tar etda_workflow_web:latest
    # - save_cache:
    #     paths:
    #       - etda-workflow.tar
    #     key: docker-image
    - persist_to_workspace:
        root: .
        paths:
          - etda-workflow.tar
  rubocop:
    docker:
      - image: devago/docker-compose
    environment:
      REGISTRY_HOST: harbor.dsrd.libraries.psu.edu
      REGISTRY_URL: harbor.dsrd.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - checkout
    - run:
        name: "Rubocop"
        command: |
          docker load -i /tmp/workspace/etda-workflow.tar
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
          RAILS_ENV=test docker-compose run --name=rubocop test bundle exec rubocop
  test_grad:
    docker:
      - image: devago/docker-compose
    environment:
      REGISTRY_HOST: harbor.dsrd.libraries.psu.edu
      REGISTRY_URL: harbor.dsrd.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - checkout
    - run:
        name: "Test Graduate"
        command: |
          docker load -i /tmp/workspace/etda-workflow.tar
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
          RAILS_ENV=test PARTNER=graduate docker-compose run --name=test --service-ports test /etda_workflow/bin/ci-rspec
          # docker cp test:/app/vendor .
  publish:
    docker:
      - image: devago/docker-compose
    environment:
      REGISTRY_HOST: harbor.dsrd.libraries.psu.edu
      REGISTRY_URL: harbor.dsrd.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'   
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Publish The Image"
          command: |
            docker load -i /tmp/workspace/etda-workflow.tar
            docker build -t $REGISTRY_URL:$CIRCLE_SHA1 .
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $REGISTRY_HOST
            docker push $REGISTRY_URL:$CIRCLE_SHA1
  test_milsch:
    docker:
      - image: devago/docker-compose
    environment:
      REGISTRY_HOST: harbor.dsrd.libraries.psu.edu
      REGISTRY_URL: harbor.dsrd.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - checkout
    - run:
        name: "Test Milsch"
        command: |
          docker load -i /tmp/workspace/etda-workflow.tar
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
          RAILS_ENV=test PARTNER=milsch docker-compose run --name=test --service-ports test /etda_workflow/bin/ci-rspec
          # docker cp test:/app/vendor .
  test_honors:
    docker:
      - image: devago/docker-compose
    environment:
      REGISTRY_HOST: harbor.dsrd.libraries.psu.edu
      REGISTRY_URL: harbor.dsrd.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - checkout
    - run:
        name: "Test Honors"
        command: |
          docker load -i /tmp/workspace/etda-workflow.tar
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
          RAILS_ENV=test PARTNER=honors docker-compose run --name=test --service-ports test /etda_workflow/bin/ci-rspec
          # docker cp test:/app/vendor .
  deploy-qa:
    docker:
      - image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
    environment:
      CONFIG_REPO: git@github.com:psu-stewardship/etda-workflow-config.git
      CONFIG_ENV: qa
      IMAGE_REPOSITORY: harbor.dsrd.libraries.psu.edu/library/etda-workflow
    steps:
    - add_ssh_keys
    - run:
        name: "Updating Config Repo"
        command: |
            ssh-keyscan github.com > ~/.ssh/known_hosts
            git clone $CONFIG_REPO
            cd etda-workflow-config
            ./generate_circle_application.sh
  deploy-preview:
    docker:
      - image: harbor.dsrd.libraries.psu.edu/public/drone-utils:latest
    environment:
      CONFIG_REPO: git@github.com:psu-stewardship/etda-workflow-config.git
      IMAGE_REPOSITORY: harbor.dsrd.libraries.psu.edu/library/etda-workflow
    steps:
    - add_ssh_keys
    - run:
        name: "Updating Config Repo"
        command: |
           ssh-keyscan github.com > ~/.ssh/known_hosts
           git clone $CONFIG_REPO
           cd etda-workflow-config
           ./generate_circle_application.sh

workflows:
  version: 2
  etda-workflow:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - test_grad:
          requires:
            - build
      - test_milsch:
          requires:
            - build
      - test_honors:
          requires:
            - build
      - publish:
          requires:
            - test_grad
      - deploy-qa:
          requires:
            - publish
          filters:
            branches:
               only:
                - master
      - deploy-preview:
          requires:
            - publish
          filters:
            branches:
              only:
                - /preview\/.*/
                - develop
