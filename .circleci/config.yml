version: 2.1

jobs:
  test:
    parallelism: 2
    docker:
      - image: circleci/ruby:2.6.6-buster-node-browsers
      - image: redis:5.0.5
      - image: mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
    environment:
      RAILS_ENV: test
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    steps:
    - checkout
    - restore_cache:
        keys:
          - bundle-{{ checksum "Gemfile.lock" }}
    - restore_cache:
        keys:
          - yarn-{{ checksum "yarn.lock" }}
    - run:
        name: "Bundle"
        command: |
          gem install bundler
          bundle check --path vendor/bundle || bundle install --deployment
    - run:
        name: "Yarn"
        command: |
          yarn install --cache-folder ~/.cache/yarn --frozen-lockfile
    - run:
        name: "Wait for Redis"
        command: dockerize -wait tcp://localhost:6379 -timeout 1m
    - run:
        name: "Wait for Mysql"
        command: dockerize -wait tcp://localhost:3306 -timeout 2m
    - save_cache:
        paths:
          - vendor/bundle
        key: bundle-{{ checksum "Gemfile.lock" }}
    - save_cache:
        key: yarn-{{ checksum "yarn.lock" }}
        paths:
          - ~/.cache/yarn
    - run:
        name: "RSpec"
        command: |
          ./bin/ci-rspec
  build:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.1.0
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_URL: harbor.k8s.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - setup_remote_docker:
        version: 20.10.6
    - checkout
    # - restore_cache:
    #     keys:
    #       - docker-image
    - run:
        name: "Build Container"
        command: |
          if [ -f etda-workflow.tar ]; then docker load -i etda-workflow.tar; fi
          docker build -t $REGISTRY_URL:$CIRCLE_SHA1 -t etda_workflow_web:latest --target base .
          docker save -o etda-workflow.tar etda_workflow_web:latest
    - run:
        name: "Setup Code Climate test-reporter"
        command: |
          # download test reporter as a static binary
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > cc-test-reporter
          chmod +x cc-test-reporter
    # - save_cache:
    #     paths:
    #       - etda-workflow.tar
    #     key: docker-image
    - persist_to_workspace:
        root: .
        paths:
          - etda-workflow.tar
          - cc-test-reporter
  rubocop:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.1.0
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_URL: harbor.k8s.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker:
        version: 20.10.6
    - checkout
    - run:
        name: "Rubocop"
        command: |
          docker load -i /tmp/workspace/etda-workflow.tar
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
          RAILS_ENV=test docker-compose run --name=rubocop test bundle exec rubocop
  integration_test_grad:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.1.0
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_URL: harbor.k8s.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker:
        version: 20.10.6
    - checkout
    - run:
        name: "Integration Test Graduate"
        command: |
          docker load -i /tmp/workspace/etda-workflow.tar
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
          PARTNER=graduate docker-compose run --name=test --service-ports -d test
          docker exec -e RAILS_ENV=test -e JS=true test /etda_workflow/bin/ci-rspec
          docker cp test:/etda_workflow/coverage/.resultset.json .resultset.json
          /tmp/workspace/cc-test-reporter format-coverage -t simplecov -o integration_coverage.json -p /etda_workflow/ .resultset.json
          # docker cp test:/app/vendor .
    - persist_to_workspace:
        root: .
        paths:
          - integration_coverage.json
  unit_test_grad:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.1.0
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_URL: harbor.k8s.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker:
          version: 20.10.6
      - checkout
      - run:
          name: "Unit Test Graduate"
          command: |
            docker load -i /tmp/workspace/etda-workflow.tar
            export TAG=${CIRCLE_SHA1}
            export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
            PARTNER=graduate docker-compose run --name=test --service-ports -d test
            docker exec -e RAILS_ENV=test test /etda_workflow/bin/ci-rspec
            docker cp test:/etda_workflow/coverage/.resultset.json .resultset.json
            /tmp/workspace/cc-test-reporter format-coverage -t simplecov -o unit_coverage.json -p /etda_workflow/ .resultset.json
            # docker cp test:/app/vendor .
      - persist_to_workspace:
          root: .
          paths:
            - unit_coverage.json
  publish:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.1.0
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_URL: harbor.k8s.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
      - setup_remote_docker:
          version: 20.10.6
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: "Upload test coverage results to Code Climate"
          command: |
            /tmp/workspace/cc-test-reporter sum-coverage /tmp/workspace/*coverage.json -p 2 -o /tmp/workspace/summed_coverage.json
            /tmp/workspace/cc-test-reporter upload-coverage -i /tmp/workspace/summed_coverage.json
      - run:
          name: "Publish The Image"
          command: |
            docker load -i /tmp/workspace/etda-workflow.tar
            docker build -t $REGISTRY_URL:$CIRCLE_SHA1 .
            docker login -u $DOCKER_USERNAME -p $HARBOR_PASSWORD $REGISTRY_HOST
            docker push $REGISTRY_URL:$CIRCLE_SHA1
  test_partners:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v1.1.0
    environment:
      REGISTRY_HOST: harbor.k8s.libraries.psu.edu
      REGISTRY_URL: harbor.k8s.libraries.psu.edu/library/etda-workflow
      DOCKER_USERNAME: 'robot$circleci'
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker:
        version: 20.10.6
    - checkout
    - run:
        name: "Setup Workspace"
        command: |
          docker load -i /tmp/workspace/etda-workflow.tar
          export TAG=${CIRCLE_SHA1}
          export GIT_COMMITED_AT=$(git log -1 --date=short --pretty=format:%ct)
    - run:
        name: "Test Honors"
        command: |
          PARTNER=honors docker-compose run --name=test --service-ports -d test
          docker exec -e RAILS_ENV=test test /etda_workflow/bin/ci-rspec
          docker-compose down
    - run:
        name: "Test Milsch"
        command: |
          PARTNER=milsch docker-compose run --name=test --service-ports -d test
          docker exec -e RAILS_ENV=test test /etda_workflow/bin/ci-rspec
          docker-compose down
    - run:
        name: "Test SSET"
        command: |
          PARTNER=sset docker-compose run --name=test --service-ports -d test
          docker exec -e RAILS_ENV=test test /etda_workflow/bin/ci-rspec
          docker-compose down
  deploy-qa:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v2.0.1
    environment:
      CONFIG_REPO: git@github.com:psu-stewardship/etda-workflow-config.git
      CONFIG_ENV: qa
      IMAGE_REPOSITORY: harbor.k8s.libraries.psu.edu/library/etda-workflow
    steps:
    - add_ssh_keys
    - run:
        name: "Updating Config Repo"
        command: |
            ssh-keyscan github.com > ~/.ssh/known_hosts
            git clone $CONFIG_REPO
            cd etda-workflow-config
            ./generate_circle_application.sh
  deploy-preview:
    docker:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v2.0.1
    environment:
      CONFIG_REPO: git@github.com:psu-stewardship/etda-workflow-config.git
      IMAGE_REPOSITORY: harbor.k8s.libraries.psu.edu/library/etda-workflow
    steps:
      - image: harbor.k8s.libraries.psu.edu/library/ci-utils:v2.0.1
    - add_ssh_keys
    - run:
        name: "Updating Config Repo"
        command: |
           ssh-keyscan github.com > ~/.ssh/known_hosts
           git clone $CONFIG_REPO
           cd etda-workflow-config
           ./generate_circle_application.sh

workflows:
  version: 2
  etda-workflow:
    jobs:
      - test
