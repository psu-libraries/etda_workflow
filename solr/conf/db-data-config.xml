<dataConfig>
  <dataSource driver="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost/etda_workflow_graduate_development" user="root" password=""/>
  <document>
    <entity name="submission"
            query="select * from submissions where status LIKE 'released for publication%'"
            deltaImportQuery="select * from submissions where public_id='${dih.delta.public_id}' and status LIKE 'released for publication%'"
            deltaQuery="select public_id from submissions where updated_at > '${dataimporter.last_index_time}' and status LIKE 'released for publication%'"
            deletedPkQuery="select public_id from submissions where updated_at > '${dataimporter.last_index_time}' and public_id is not null and status = 'waiting for publication release'">
      <field name="id" column="public_id"/>
      <field name="db_id" column="id"/>
      <field name="access_level_ss" column="access_level"/>
      <field name="semester_ssi" column="semester"/>
      <field name="year_isi" column="year"/>
      <field name="title_ssi" column="title"/>
      <field name="title_tesi" column="title"/>
      <field name="abstract_tesi" column="abstract"/>
      <field name="defended_at_dtsi" column="defended_at"/>
      <field name="released_metadata_at_dtsi" column="released_metadata_at"/>

      <!-- I know that this seems weird, but I wanted to apply two regular expressions for the same column so that needed twp entities -->
      <!-- mapping of access level to blacklight access controls -->
      <entity name="access"
              transformer="RegexTransformer"
              query="select access_level from submissions where id='${submission.id}'">
        <field column="download_access_group_ssim" regex="open_access" sourceColName="access_level" replaceWith="public"/>
      </entity>
      <entity name="access2"
              transformer="RegexTransformer"
              query="select access_level from submissions where id='${submission.id}'">
        <field column="download_access_group_ssim" regex="restricted_to_institution" sourceColName="access_level" replaceWith="registered"/>
      </entity>
      <entity name="access3"
              transformer="TemplateTransformer"
              query="select access_level from submissions where id='${submission.id}'">
        <field column="read_access_group_ssim" template="public" />
      </entity>
      <!-- END of mapping of access level to blacklight access controls -->

      <entity name="final_submission_file"
              query="select * from final_submission_files where submission_id='${submission.id}'"
              deltaQuery="select * from final_submission_files where updated_at > '${dataimporter.last_index_time}'"
              parentDeltaQuery="select public_id from submissions where id=${final_submission_file.submission_id}">
        <field column="asset" name="file_name_ssim"/>
        <field name="final_submission_file_isim" column="id"/>
      </entity>


      <entity name="author"
              query="select id, first_name, last_name, middle_name from authors where id=${submission.author_id}"
              deltaQuery="select * from authors where updated_at > '${dataimporter.last_index_time}'"
              parentDeltaQuery="select public_id from submissions where author_id=${author.id}"
              transformer="TemplateTransformer">
        <field column="first_name" name="first_name_ssi"/>
        <field column="last_name" name="last_name_ssi"/>
        <field column="last_name" name="last_name_tesi"/>
        <field column="middle_name" name="middle_name_ssi"/>
        <field column="psu_email_address" name="email_ssi"/>
        <field column="author_name" name="author_name_tesi"
               template="${author.last_name}, ${author.first_name} ${author.middle_name}"/>
      </entity>

      <entity name="degree"
              query="select id, name, description, degree_type_id from degrees where id=${submission.degree_id}"
              deltaQuery="select * from degrees where updated_at > '${dataimporter.last_index_time}'"
              parentDeltaQuery="select public_id from submissions where degree_id=${degree.id}">
        <field column="name" name="degree_name_ssi"/>
        <field column="description" name="degree_description_ssi"/>

        <entity name="degree_type" query="select id, name from degree_types where id=${degree.degree_type_id}">
          <field column="name" name="degree_type_ssi"/>
          <field column="name" name="degree_type_slug_ssi"/>
        </entity>
      </entity>

      <entity name="program" query="select id, name from programs where id=${submission.program_id}"
              deltaQuery="select * from programs where updated_at > '${dataimporter.last_index_time}'"
              parentDeltaQuery="select public_id from submissions where program_id=${program.id}">
        <field column="name" name="program_name_ssi"/>
        <field column="name" name="program_name_tesi"/>
      </entity>

      <entity name="committee_member"
              query="select id, name, committee_role_id, email from committee_members where submission_id=${submission.id}"
              deltaQuery="select * from committee_members where updated_at > '${dataimporter.last_index_time}'"
              parentDeltaQuery="select public_id from submissions where id=${committee_member.submission_id}">
        <field column="name" name="committee_member_name_ssim"/>
        <field column="name" name="committee_member_name_tesim"/>
        <field column="email" name="committee_member_email_ssim"/>
        <entity name="committee_role"
                query="select id, name from committee_roles where id=${committee_member.committee_role_id}"
                transformer="TemplateTransformer">
          <field column="name" name="committee_member_role_ssim"/>
          <field column="name" name="committee_member_and_role_tesim"
                 template="${committee_member.name}, ${committee_role.name}"/>
        </entity>

      </entity>

      <entity name="keyword" query="select id, word from keywords where submission_id=${submission.id}"
              deltaQuery="select * from keywords where updated_at > '${dataimporter.last_index_time}'"
              parentDeltaQuery="select public_id from submissions where id=${keyword.submission_id}">
        <field column="word" name="keyword_ssim"/>
        <field column="word" name="keyword_tesim"/>
      </entity>
    </entity>
  </document>
</dataConfig>
